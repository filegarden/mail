# Enable logging for anything OpenDKIM considers "interesting activity".
Syslog yes

# Also log whenever OpenDKIM successfully signs a message. This is useful for
# ensuring OpenDKIM works as intended and isn't signing anything it shouldn't.
SyslogSuccess yes

# Run OpenDKIM as an unprivileged user.
UserID opendkim

# Disallow anyone but OpenDKIM from accessing the files OpenDKIM creates.
UMask 0007

# Save OpenDKIM's process ID so we can use a script to restart OpenDKIM.
PidFile /run/opendkim.pid

# Auto-restart OpenDKIM whenever it's killed by our `usr/local/bin/deploy_dkim`
# script.
AutoRestart yes

# If it restarts more frequently than expected, stop auto-restarting OpenDKIM
# and let the container stop so Docker can auto-restart everything.
AutoRestartRate 10/1h

# Let Postfix communicate with OpenDKIM through port to give it mail to sign.
Socket inet:8891@localhost

# Only use OpenDKIM for signing our mail, not for verifying signatures. We
# configure Postfix to only give OpenDKIM messages from trusted senders, so this
# is fine.
Mode s

# Tell others to consider our messages untampered even when other servers modify
# our message headers (but not body) in strictly meaningless ways, such as by
# changing header name casing, line wrapping, or insignificant whitespace, as
# per RFC 6376 (section 3.4.2).
Canonicalization relaxed/simple

# The file at this path contains `*`, which tells OpenDKIM to sign messages from
# any domain. We configured Postfix to only give OpenDKIM messages from trusted
# senders, so this is fine.
Domain refile:/etc/opendkim/Domain

# Use the same DKIM selector name and private key path as the ones used in our
# `home/dkim/bin/genkey` script.
Selector default
KeyFile /var/db/dkim/default.private

# This file contains a list of all the headers OpenDKIM should sign.
SignHeaders file:/etc/opendkim/SignHeaders

# If a header from our original message is changed, our DKIM signature is
# broken, meaning the message is considered tampered. But if there's a new
# header our message didn't have, our signature isn't broken by default. (That
# includes new headers named the same as existing ones, resulting in multiple
# with the same name, which is valid.)
#
# For example, if we send a message with no subject, an attacker can add their
# own subject with malicious/spam content in a spoofed copy of our message, and
# a recipient won't be able to tell the message wasn't from us. And if we didn't
# include any CC recipients, the attacker can add those too, spreading their
# spam to more victims while still appearing to legitimately come from us.
#
# To prevent attacks like this, we can "oversign" our headers. Oversigning a
# header makes our signature break when another party adds more values of that
# header which weren't on our original message. Here, we oversign all the same
# headers we sign; there's no reason to let another party add any headers that
# are otherwise meant to be signed.
OversignHeaders file:/etc/opendkim/SignHeaders
