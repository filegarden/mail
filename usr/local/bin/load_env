#!/bin/busybox sh
# Loads variables defined in our `.env` file into the `/run/.env` directory so
# each variable can have its own maximally restrictive permissions.

# Exit if an error occurs or an unset variable is referenced.
set -euo pipefail

# Run our `.env` file, mounted here by Docker secrets, to load its variables
# into this script. Note that Docker secrets are mounted directly from the host,
# not only copied in when the container starts, so this file updates live.
#
# Disable ShellCheck from trying to analyze the file; it only exists at runtime.
# shellcheck disable=SC1091
source /run/secrets/.env

# Loads a `.env` variable with the specified name into a file with the same name
# in the `/run/.env` directory, and gives only the specified group read-only
# access to the file. If no group is specified, the variable will only be
# accessible with root privileges.
_load() {
	local variable="$1" group="${2-}"

	# Get the value of the variable with the specified name, and write it to
	# a file with the same name in `/run/.env`.
	eval "printf '%s\n' \"\$$variable\"" > "/run/.env/$variable"

	# If there's a specified group, give it read-only access to the file.
	if [[ "$group" ]]; then
		chmod g=r "/run/.env/$variable"
		chgrp -- "$group" "/run/.env/$variable"
	fi
}

# Load the postmaster's address. Our ACME account needs this so Let's Encrypt
# can send us notifications for problems concerning our TLS certificates.
_load POSTMASTER_ADDRESS acme

# Set our postmaster's address so `etc/postfix/main.cf` can configure Postfix to
# use it.
postconf "_postmaster_address = $POSTMASTER_ADDRESS"

# Load the Cloudflare API token for our domain, so our server can manage its DNS
# records automatically.
_load CF_API_TOKEN cf-api-token
