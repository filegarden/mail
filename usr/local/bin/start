#!/bin/busybox sh

# Exit if an error occurs or an unset variable is referenced.
set -euo pipefail

# Run our TLS certificate issuing script as the unprivileged `acme` user.
su acme -s /bin/sh -c /home/acme/bin/start

# Run our DKIM key generation script as the unprivileged `opendkim` user.
su opendkim -s /bin/sh -c /home/opendkim/bin/genkey

# Update our certificate files since our above `home/acme/bin/start` script
# could have changed them, and the below `nc` TCP server that would normally
# listen for certificate updates to run this hasn't started yet, so it could
# have missed that initial update.
update_cert_files

# * If one of the below processes exits, also halt the others so the container
#   can restart.
# * Ensure different lines logged at the same time don't intermingle.
# * Don't limit the number of simultaneous commands to one per CPU thread. All
#   these commands must run unconditionally.
# * Run these commands simultaneously, and in the foreground so `parallel` can
#   detect when they exit and stay open as long as they're open. Running these
#   in the foreground also makes their output appear in the container's output.
#   * `syslogd` is what handles system logs. `-n` runs it in the foreground, and
#     `-O /dev/stdout` tells it to output all logs to the container's output.
#     This is only needed for OpenDKIM. We configured the other programs not to
#     rely on syslog.
#   * This `nc` command starts a local TCP server that runs our `update_certs`
#     script whenever it receives a connection. This runs as a privileged user,
#     so our `dehydrated` hook script can connect to it in order to update
#     Postfix's certificate files and reload Postfix despite `dehydrated`
#     running as an unprivileged user.
#   * The other programs listed here are described in our `Dockerfile`.
parallel \
    --halt now,done=1 \
    --line-buffer \
    --jobs 0 \
    ::: \
    "syslogd -n -O /dev/stdout" \
    "nc -lk -s 127.0.0.1 -p 38368 -e update_certs" \
    "postfix start-fg" \
    "dovecot -F" \
    "opendkim -f"
