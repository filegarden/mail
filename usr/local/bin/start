#!/bin/busybox sh

# Exit if an error occurs or an unset variable is referenced.
set -euo pipefail

# Remove all public access permissions for everything in `acme.sh`'s home
# directory, since our Cloudflare token is saved there. (Note our private key
# file already doesn't have these permissions, so this isn't meant for that.)
chmod -R o= /root/.acme.sh

# Reset any Cloudflare information `acme.sh` has stored in case we changed our
# Cloudflare API token.
# TODO: This might break renewals, since they won't know our CF token anymore.
sed -i "/^SAVED_CF_/d" /root/.acme.sh/account.conf

# Get our mail server's hostname (e.g. `mail.example.com`).
# TODO: Make `acme.sh` stop renewing for an old hostname when this changes.
hostname="$(hostname)"

# Load our Cloudflare API token from the Docker secrets so `acme.sh` can use it.
cf_api_token="$(cat /run/secrets/CF_API_TOKEN)"

# TODO: Set an account email for `acme.sh`.

# Set the Postfix TLS chain file path to the same one used in the `postfix-tls`
# Docker volume defined in `compose.yaml`.
postfix_tls_path=/etc/postfix/smtpd_tls_chain_files

# - Use `acme.sh` to issue a new TLS certificate.
# - Use our domain's DNS records in Cloudflare to prove to Let's Encrypt that we
#   own the domain we're requesting a certificate for.
# - Generate a new private key for each renew to limit the risk of a compromised
#   key.
# - Upon renewal, copy the new private key and certificate files to the location
#   we configured Postfix to use (in `etc/postfix/main.cf`), since the location
#   `acme.sh` saves to by default is intentionally unreliable.
# - Tell `acme.sh` to reload Postfix whenever it renews our certificate so that
#   Postfix always uses the latest certificate files.
# TODO: Remove `_test`
CF_Token="$cf_api_token" \
acme.sh \
	--issue \
	--dns dns_cf \
	--domain "$hostname" \
	--always-force-new-domain-key \
	--key-file "$postfix_tls_path/key.pem" \
	--fullchain-file "$postfix_tls_path/cert.pem" \
	--renew-hook "postfix reload" ||
	# Do nothing (don't exit this script) if the above command fails, for
	# example due to existing certificates not needing renewal yet.
	:

# Exit this script if the above files failed to generate.
if ! [ -e "$postfix_tls_path/key.pem" ]; then
	exit 1
fi

# - If one of the below processes exits, also halt the others so the container
#   can restart.
# - Ensure different lines logged at the same time don't intermingle.
# - Run these commands in parallel, and in the foreground so GNU Parallel can
#   detect when they exit and stay open as long as they're open.
parallel \
    --halt now,done=1 \
    --line-buffer \
    ::: "postfix start-fg" "dovecot -F" "opendkim -f"
