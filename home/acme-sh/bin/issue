#!/bin/busybox sh

# Exit if an error occurs or an unset variable is referenced.
set -euo pipefail

# By default, don't let `acme.sh` create files accessible to anyone but itself.
umask 0007

# Get our mail server's hostname (e.g. `mail.example.com`).
hostname="$(hostname)"

# Load the Cloudflare API token from our Docker secrets so `acme.sh` can use it.
cf_api_token="$(cat /run/secrets/CF_API_TOKEN)"

# Set the Postfix TLS chain file path to the same one used in the `postfix-tls`
# Docker volume defined in `compose.yaml`.
postfix_tls_path=/etc/postfix/smtpd_tls_chain_files

# If `acme.sh` never gave Postfix this TLS file, a previous attempt of `acme.sh`
# failed partway, but `acme.sh` might think it completed successfully if a TLS
# certificate was saved in its directory before the failure, so it'll never
# complete the attempt and give Postfix its copy of the certificate. Wiping
# `acme.sh`'s save directory clean makes it issue a new certificate next time.
# That way, Postfix can get its copy.
if ! [ -s "$postfix_tls_path/key.pem" ]; then
	rm -rf ~/.acme.sh/*

	# Since we just reset all of `acme.sh`'s data, set its default
	# certificate authority to Let's Encrypt again.
	# TODO: Remove `_test`.
	acme.sh --set-default-ca --server letsencrypt_test
fi

# * Use `acme.sh` to issue a new TLS certificate.
# * Use our domain's DNS records in Cloudflare to prove to Let's Encrypt that we
#   own the domain we're requesting a certificate for.
# * Generate a new private key for each renew to limit the risk of a compromised
#   key.
# * Upon renewal, copy the new private key and certificate files to the location
#   we configured Postfix to use (in `etc/postfix/main.cf`), since the location
#   `acme.sh` saves to by default is intentionally unreliable.
# * Tell `acme.sh` to reload Postfix whenever it renews our certificate so that
#   Postfix always uses the latest certificate files.
CF_Token="$cf_api_token" \
acme.sh \
	--issue \
	--dns dns_cf \
	--domain "$hostname" \
	--always-force-new-domain-key \
	--key-file "$postfix_tls_path/key.pem" \
	--fullchain-file "$postfix_tls_path/cert.pem" \
	--renew-hook "postfix reload" ||
	# Do nothing (don't exit this script) if the above command fails, for
	# example due to existing certificates not needing renewal yet.
	:

# If the final output files failed to generate, then exit with an error.
if ! [ -s "$postfix_tls_path/key.pem" ]; then
	echo "TLS certificate issuing failed." >&2
	exit 1
fi
